type Query {
  characters(page: Int, orderBy: String): CharacterConnection!
  characterNameStartsWith(page: Int, orderBy: String, search: String): CharacterConnection!
  character: Character
}

type Mutation {
  comments: String
}

interface Node {
  id: ID!
  description: String
  thumbnail: String
}

type Character implements Node {
  id: ID!
  description: String
  thumbnail: String
  name: String!
}

type CharacterConnection {
  totalCount: Int!
  edges: [CharacterEdge!]!
}

type CharacterEdge {
  node: Character!
}

type Comic {
  id: Int!
  title: String!
  description: String
  modified: String
  prices: [Price!]!
  creators: [Creator!]!
}

type Price {
  type: String!
  price: Int!
}

type Creator {
  name: String!
  role: String!
}
